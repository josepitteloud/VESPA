/*--------------------------------------------------------------------------------------------------------------**Project Name: 					Vespa Executive Dashboard**Analysts:							Angel Donnarumma (angel.donnarumma_mirabel@skyiq.co.uk)**Lead(s):							Jose Loureda**Stakeholder:						Tone Mooney**Due Date:							22/02/2013**Project Code (Insight Collation):	**Sharepoint Folder:				http://rtci/Sky%20Projects/Forms/AllItems.aspx?RootFolder=%2fSky%20Projects%2fVespa%2fRegular%20reports									%2fMeta%2fExecutive%20Dashboard&FolderCTID=&View={95B15B22-959B-4B62-809A-AD43E02001BD}									**Business Brief:The Executive Dashboard is created, aiming to have a high level view of the performance and balance of the panel.On this report two main sections are highlighted which are "PANEL DATA RETURN", showing the performace for last week and comparing it to theaverage performance of last 4 weeks (not including last week). The idea is to see the variance and trend we are having around metrics such as accounts returning data, number of accounts who are reporting data in a reliably way, average reliability of accounts in the panel.Last section is  "PANEL BALANCE", which shows figures for scaling and how is our vespa panel distributed to represent Sky UK base, complementedby convergence and coverage metrics.**Code Modules:M01: XDash Reprocess Manager		M01.0 - Initialising environment		M01.1 - Check fresh start flag.		M01.2 - Check pending tasks		M01.3 - Set up tasks		M01.4 - Looping through tasks.		M01.5 - Grant Privileges		M02: XDash Base Initialisation		M02.1 - Initialize Variables		M02.2 - Setting up the logger		M02.3 - HouseKeeping.		M03: XDash Housekeeping		M03.1 - Clear processing tables		M03.2 - Fresh Start		M04: XDash Output Manager		M04.1 - Dynamic call to Metrics.		M04.2 - Storing results in output tables		M05: Ad-Hoc Metrics		M05.1 - Deriving Metric(s)		M05.2 - QAing results		M05.3 - Returning results		M06: Historical View Manager		M06.1 - Deriving Metric(s)		M06.2 - QAing results		M06.3 - Returning results		M07: Panel Balance Measures Extractor		M07.1 - Deriving Metric(s)		M07.2 - QAing results		M07.3 - Returning resultsM08: Daily Panel Data Return Extractor		M08.0 - Initialising environment		M08.1 - Deriving Metric(s)		M08.2 - QAing results		M08.3 - Returning results		M09: Vespa Panel Balance Extractor		M09.0 - Initialising environment		M09.1 - Deriving Metric(s)		M09.2 - QAing results		M09.3 - Returning results		--------------------------------------------------------------------------------------------------------------*/--------------------------------------/* M01.0 - Initialising environment */--------------------------------------if object_id('vespa_xdash_m01_processmanager') is not null	drop procedure vespa_xdash_m01_processmanager;commit;gocreate procedure vespa_xdash_m01_processmanager	@fresh_start	bit = 0as begin		declare @task 		varchar(15)	declare @exe_status	integer	declare @log_id		bigint	declare @module_id	varchar(3)		set @exe_status = -1	set @module_id	= 'M01'		execute	@exe_status = vespa_xdash_m02_baseinitialisation @log_id output		execute citeam.logger_add_event @log_ID, 1, @Module_id || ' : EXE M02', @exe_status		-------------------------------------	/* M01.1 - Check fresh start flag. */	-------------------------------------	set @exe_status = -1		execute @exe_status = vespa_xdash_m03_housekeeping @fresh_start		execute citeam.logger_add_event @log_ID, 1, @Module_id || ' : EXE M03', @exe_status		---------------------------------	/* M01.2 - Check pending tasks */	---------------------------------		while exists	(						select 	first status						from	vespa_xdash_tasks 						where	status = 0			--> Any tasks Pending?...					)		begin 						set @exe_status = -1				--------------------------	/* M01.3 - Set up tasks */	--------------------------				-- What task to execute?...			select  @task = task			from    vespa_xdash_tasks			where   sequencer = (									select  min(sequencer)									from    vespa_xdash_tasks									where   status = 0								)										------------------------------------	/* M01.4 - Looping through tasks. */	------------------------------------			-- execute the task...			execute @exe_status = vespa_xdash_m04_outputmanager @task,@log_ID						-- update tasks table...			if @exe_status = 0				begin									update	vespa_xdash_tasks					set		status = 1					where	task = @task					and		status = 0										commit									end			else				begin										execute citeam.logger_add_event @log_ID, 1, @Module_id || ' : EXE M04 (ERROR) T-' ||@task , @exe_status					break									end											execute citeam.logger_add_event @log_ID, 1, @Module_id || ' : EXE M04 T-' ||@task , @exe_status		end end;------------------------------/* M01.5 - Grant Privileges */------------------------------grant execute on vespa_xdash_m01_processmanager to vespa_group_low_security;commit;